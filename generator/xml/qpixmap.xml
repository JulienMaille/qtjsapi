<?xml version="1.0"?>
<unit xmlns="http://qcad.org/namespaces/src" xmlns:qc="http://qcad.org/namespaces/xsl" filename="qpixmap.h">
  <class_decl name="QImageWriter" />
  <class_decl name="QImageReader" />
  <class_decl name="QColor" />
  <class_decl name="QVariant" />
  <class name="QPixmap" proxy="true">
    <super_list>
      <super name="QPaintDevice" />
    </super_list>
    <constructor>
      <variant>
        <parameters />
      </variant>
      <!--
      <variant>
        <parameters>
          <parameter const="false" type="QPlatformPixmap" modifier="*" name="data" />
        </parameters>
      </variant>
      -->
      <variant>
        <parameters>
          <parameter const="false" type="int" modifier="" name="w" />
          <parameter const="false" type="int" modifier="" name="h" />
        </parameters>
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="QSize" modifier="&amp;" name="" />
        </parameters>
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="fileName" />
          <parameter const="true" type="char" modifier="*" name="format" default="nullptr" />
          <parameter const="false" type="Qt::ImageConversionFlags" modifier="" name="flags" default="Qt::AutoColor" />
        </parameters>
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="char" modifier="*" name="" />
        </parameters>
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="QPixmap" modifier="&amp;" name="" />
        </parameters>
      </variant>
      <variant>
        <parameters>
          <parameter const="false" type="QPixmap" modifier="&amp;&amp;" name="other" />
        </parameters>
      </variant>
    </constructor>
    <preproc plain="#ifndef QT_NO_IMAGEFORMAT_XPM" />
    <preproc plain="#endif" />
    <function name="swap">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="QPixmap" modifier="&amp;" name="other" />
        </parameters>
      </variant>
    </function>
    <function name="isNull">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="devType">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="width">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="height">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="size">
      <variant return-type="QSize" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="rect">
      <variant return-type="QRect" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="depth">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="defaultDepth" static="true">
      <variant return-type="int" access="public">
        <parameters />
      </variant>
    </function>
    <function name="fill">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QColor" modifier="&amp;" name="fillColor" default="Qt::white" />
        </parameters>
      </variant>
    </function>
    <function name="mask">
      <variant return-type="QBitmap" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setMask">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QBitmap" modifier="&amp;" name="" />
        </parameters>
      </variant>
    </function>
    <function name="devicePixelRatio">
      <variant return-type="qreal" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setDevicePixelRatio">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="qreal" modifier="" name="scaleFactor" />
        </parameters>
      </variant>
    </function>
    <function name="deviceIndependentSize">
      <variant return-type="QSizeF" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="hasAlpha">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="hasAlphaChannel">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <preproc plain="#ifndef QT_NO_IMAGE_HEURISTIC_MASK" />
    <function name="createHeuristicMask">
      <variant return-type="QBitmap" const="true" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="clipTight" default="true" />
        </parameters>
      </variant>
    </function>
    <preproc plain="#endif" />
    <function name="createMaskFromColor">
      <variant return-type="QBitmap" const="true" access="public">
        <parameters>
          <parameter const="true" type="QColor" modifier="&amp;" name="maskColor" />
          <parameter const="false" type="Qt::MaskMode" modifier="" name="mode" default="Qt::MaskInColor" />
        </parameters>
      </variant>
    </function>
    <function name="scaled">
      <variant return-type="QPixmap" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="w" />
          <parameter const="false" type="int" modifier="" name="h" />
          <parameter const="false" type="Qt::AspectRatioMode" modifier="" name="aspectMode"
          default="Qt::IgnoreAspectRatio" />
          <parameter const="false" type="Qt::TransformationMode" modifier="" name="mode"
          default="Qt::FastTransformation" />
        </parameters>
      </variant>
      <variant return-type="QPixmap" const="true" access="public">
        <parameters>
          <parameter const="true" type="QSize" modifier="&amp;" name="s" />
          <parameter const="false" type="Qt::AspectRatioMode" modifier="" name="aspectMode"
          default="Qt::IgnoreAspectRatio" />
          <parameter const="false" type="Qt::TransformationMode" modifier="" name="mode"
          default="Qt::FastTransformation" />
        </parameters>
      </variant>
    </function>
    <function name="scaledToWidth">
      <variant return-type="QPixmap" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="w" />
          <parameter const="false" type="Qt::TransformationMode" modifier="" name="mode"
          default="Qt::FastTransformation" />
        </parameters>
      </variant>
    </function>
    <function name="scaledToHeight">
      <variant return-type="QPixmap" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="h" />
          <parameter const="false" type="Qt::TransformationMode" modifier="" name="mode"
          default="Qt::FastTransformation" />
        </parameters>
      </variant>
    </function>
    <function name="transformed">
      <variant return-type="QPixmap" const="true" access="public">
        <parameters>
          <parameter const="true" type="QTransform" modifier="&amp;" name="" />
          <parameter const="false" type="Qt::TransformationMode" modifier="" name="mode"
          default="Qt::FastTransformation" />
        </parameters>
      </variant>
    </function>
    <function name="trueMatrix" static="true">
      <variant return-type="QTransform" access="public">
        <parameters>
          <parameter const="true" type="QTransform" modifier="&amp;" name="m" />
          <parameter const="false" type="int" modifier="" name="w" />
          <parameter const="false" type="int" modifier="" name="h" />
        </parameters>
      </variant>
    </function>
    <function name="toImage">
      <variant return-type="QImage" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="fromImage" static="true">
      <variant return-type="QPixmap" access="public">
        <parameters>
          <parameter const="true" type="QImage" modifier="&amp;" name="image" />
          <parameter const="false" type="Qt::ImageConversionFlags" modifier="" name="flags" default="Qt::AutoColor" />
        </parameters>
      </variant>
      <variant return-type="QPixmap" access="public">
        <parameters>
          <parameter const="false" type="QImage" modifier="&amp;&amp;" name="image" />
          <parameter const="false" type="Qt::ImageConversionFlags" modifier="" name="flags" default="Qt::AutoColor" />
        </parameters>
      </variant>
    </function>
    <function name="fromImageReader" static="true">
      <variant return-type="QPixmap" access="public">
        <parameters>
          <parameter const="false" type="QImageReader" modifier="*" name="imageReader" />
          <parameter const="false" type="Qt::ImageConversionFlags" modifier="" name="flags" default="Qt::AutoColor" />
        </parameters>
      </variant>
    </function>
    <function name="load">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="fileName" />
          <parameter const="true" type="char" modifier="*" name="format" default="nullptr" />
          <parameter const="false" type="Qt::ImageConversionFlags" modifier="" name="flags" default="Qt::AutoColor" />
        </parameters>
      </variant>
    </function>
    <function name="loadFromData">
      <!--
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="uchar" modifier="*" name="buf" />
          <parameter const="false" type="uint" modifier="" name="len" />
          <parameter const="true" type="char" modifier="*" name="format" default="nullptr" />
          <parameter const="false" type="Qt::ImageConversionFlags" modifier="" name="flags" default="Qt::AutoColor" />
        </parameters>
      </variant>
      -->
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="QByteArray" modifier="&amp;" name="data" />
          <parameter const="true" type="char" modifier="*" name="format" default="nullptr" />
          <parameter const="false" type="Qt::ImageConversionFlags" modifier="" name="flags" default="Qt::AutoColor" />
        </parameters>
      </variant>
    </function>
    <function name="save">
      <variant return-type="bool" const="true" access="public">
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="fileName" />
          <parameter const="true" type="char" modifier="*" name="format" default="nullptr" />
          <parameter const="false" type="int" modifier="" name="quality" default="-1" />
        </parameters>
      </variant>
      <variant return-type="bool" const="true" access="public">
        <parameters>
          <parameter const="false" type="QIODevice" modifier="*" name="device" />
          <parameter const="true" type="char" modifier="*" name="format" default="nullptr" />
          <parameter const="false" type="int" modifier="" name="quality" default="-1" />
        </parameters>
      </variant>
    </function>
    <function name="convertFromImage">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="QImage" modifier="&amp;" name="img" />
          <parameter const="false" type="Qt::ImageConversionFlags" modifier="" name="flags" default="Qt::AutoColor" />
        </parameters>
      </variant>
    </function>
    <function name="copy">
      <variant return-type="QPixmap" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="x" />
          <parameter const="false" type="int" modifier="" name="y" />
          <parameter const="false" type="int" modifier="" name="width" />
          <parameter const="false" type="int" modifier="" name="height" />
        </parameters>
      </variant>
      <variant return-type="QPixmap" const="true" access="public">
        <parameters>
          <parameter const="true" type="QRect" modifier="&amp;" name="rect" default="QRect()" />
        </parameters>
      </variant>
    </function>
    <function name="scroll">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="dx" />
          <parameter const="false" type="int" modifier="" name="dy" />
          <parameter const="false" type="int" modifier="" name="x" />
          <parameter const="false" type="int" modifier="" name="y" />
          <parameter const="false" type="int" modifier="" name="width" />
          <parameter const="false" type="int" modifier="" name="height" />
          <!--
          <parameter const="false" type="QRegion" modifier="*" name="exposed" default="nullptr" />
          -->
        </parameters>
      </variant>
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="dx" />
          <parameter const="false" type="int" modifier="" name="dy" />
          <parameter const="true" type="QRect" modifier="&amp;" name="rect" />
          <!--
          <parameter const="false" type="QRegion" modifier="*" name="exposed" default="nullptr" />
          -->
        </parameters>
      </variant>
    </function>
    <function name="cacheKey">
      <variant return-type="qint64" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isDetached">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="detach">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isQBitmap">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="paintEngine">
      <variant return-type="QPaintEngine*" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="metric" />
    <function name="fromImageInPlace" static="true" />
    <function name="doImageIO" />
    <function name="doInit" />
    <class_decl name="QBitmap" />
    <class_decl name="QPaintDevice" />
    <class_decl name="QPainter" />
    <class_decl name="QOpenGLWidget" />
    <class_decl name="QRasterBuffer" />
    <preproc plain="#if !defined(QT_NO_DATASTREAM)" />
    <preproc plain="#endif" />
    <!--
    <function name="handle">
      <variant return-type="QPlatformPixmap*" const="true" access="public">
        <parameters />
      </variant>
    </function>
    -->
  </class>
</unit>
